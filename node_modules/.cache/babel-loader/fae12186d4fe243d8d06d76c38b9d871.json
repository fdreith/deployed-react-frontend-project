{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Comment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst Comment = props => {\n  const findUser = userId => {\n    return props.users.find(user => user.id === userId);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, findUser(props.comment.user_id).name, \": \", props.comment.content, \" at \", props.comment.created_at), console.log(props));\n};\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps)(Comment);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Comment.js"],"names":["React","connect","Comment","props","findUser","userId","users","find","user","id","comment","user_id","name","content","created_at","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzB,WAAOF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAArC,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACD,KAAK,CAACO,OAAN,CAAcC,OAAf,CAAR,CAAgCC,IADnC,QAC2CT,KAAK,CAACO,OAAN,CAAcG,OADzD,UACsEV,KAAK,CAACO,OAAN,CAAcI,UADpF,CADF,EAIGC,OAAO,CAACC,GAAR,CAAYb,KAAZ,CAJH,CADF;AAQD,CAdD;;AAeA,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAQ;AACNZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADP,GAAR;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBf,OAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst Comment = (props) => {\n\n  const findUser = userId => {\n    return props.users.find(user => user.id === userId)\n  }\n  \n  return (\n    <div>\n      <p>\n        {findUser(props.comment.user_id).name}: {props.comment.content} at {props.comment.created_at}\n      </p>\n      {console.log(props)}\n    </div>\n  )\n}\nconst mapStateToProps = state => {\n  return ({\n    users: state.users\n  })\n}\n\nexport default connect(mapStateToProps)(Comment)"]},"metadata":{},"sourceType":"module"}