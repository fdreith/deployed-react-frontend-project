{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js';\nimport TaskForm from './TaskForm.js';\nimport AssignedTasks from './AssignedTasks.js';\nimport CompletedTasks from './CompletedTasks.js';\nimport EditTask from './EditTask.js';\nimport { Switch, Route } from 'react-router-dom';\n\nclass TasksContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filterMyTasks = tasks => {\n      return tasks.filter(task => task.type === \"task\").filter(task => task.attributes.completed === false);\n    };\n\n    this.filterAssignedTasks = tasks => {\n      return tasks.filter(task => task.type === \"assigned_task\").filter(task => task.relationships.user.data.id !== task.relationships.owner.data.id).filter(task => task.attributes.completed === false);\n    };\n\n    this.filterCompletedTasks = tasks => {\n      const completedTasks = sortByDate(tasks.filter(task => task.attributes.completed === true).filter(task => task.type === \"task\"));\n    };\n  }\n\n  componentDidMount() {\n    this.props.history.push('/tasks/my-tasks');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/tasks/my-tasks\",\n      render: routerProps => /*#__PURE__*/React.createElement(MyTasks, Object.assign({}, routerProps, {\n        myTasks: this.filterMyTasks(this.props.tasks),\n        currentUser: this.props.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/assigned\",\n      render: routerProps => /*#__PURE__*/React.createElement(AssignedTasks, Object.assign({}, routerProps, {\n        assignedTasks: this.filterAssignedTasks(this.props.tasks),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/completed\",\n      render: routerProps => /*#__PURE__*/React.createElement(CompletedTasks, Object.assign({}, routerProps, {\n        completedTasks: this.props.completedTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/:id/edit\",\n      render: routerProps => {\n        const tasks = [this.props.myTasks, this.props.assignedTasks].flat();\n        const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id));\n        return /*#__PURE__*/React.createElement(EditTask, Object.assign({}, routerProps, {\n          task: task,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TaskForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(TasksContainer);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js"],"names":["React","Component","connect","MyTasks","TaskForm","AssignedTasks","CompletedTasks","EditTask","Switch","Route","TasksContainer","filterMyTasks","tasks","filter","task","type","attributes","completed","filterAssignedTasks","relationships","user","data","id","owner","filterCompletedTasks","completedTasks","sortByDate","componentDidMount","props","history","push","render","routerProps","currentUser","myTasks","assignedTasks","flat","find","parseInt","match","params","mapStateToProps","state","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js'\nimport TaskForm from './TaskForm.js'\nimport AssignedTasks from './AssignedTasks.js'\nimport CompletedTasks from './CompletedTasks.js'\nimport EditTask from './EditTask.js'\nimport { Switch, Route } from 'react-router-dom'\n\nclass TasksContainer extends Component {\n\n  componentDidMount() {\n    this.props.history.push('/tasks/my-tasks')\n  }\n\n  filterMyTasks = (tasks) => {\n    return tasks.filter(task => task.type === \"task\")\n      .filter(task => task.attributes.completed === false)\n  }\n\n  filterAssignedTasks = (tasks) => {\n    return tasks.filter(task => task.type === \"assigned_task\")\n      .filter(task => task.relationships.user.data.id !== task.relationships.owner.data.id)\n      .filter(task => task.attributes.completed === false)\n  }\n\n  filterCompletedTasks = (tasks) => {\n    const completedTasks = sortByDate(tasks.filter(task => task.attributes.completed === true)\n  .filter(task => task.type === \"task\"))\n  }\n\n  render() {\n    return (\n      <div className=\"tasks-container\">\n        <Switch>\n          <Route\n            exact path=\"/tasks/my-tasks\"\n            render={(routerProps) => <MyTasks {...routerProps} myTasks={this.filterMyTasks(this.props.tasks)} currentUser={this.props.currentUser} />}\n          />\n          <Route\n            path=\"/tasks/assigned\"\n            render={(routerProps) => <AssignedTasks {...routerProps} assignedTasks={this.filterAssignedTasks(this.props.tasks)} />}\n          />\n          <Route\n            path=\"/tasks/completed\"\n            render={(routerProps) => <CompletedTasks {...routerProps} completedTasks={this.props.completedTasks} />}\n          />\n          <Route\n            path=\"/tasks/:id/edit\"\n            render={(routerProps) => {\n              const tasks = [this.props.myTasks, this.props.assignedTasks].flat()\n              const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id))\n              return <EditTask {...routerProps} task={task} />\n            }}\n          />\n\n        </Switch>\n        <hr />\n        <TaskForm />\n\n      </div >\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users,\n    tasks: state.tasks\n  })\n}\n\nexport default connect(mapStateToProps)(TasksContainer)"]},"metadata":{},"sourceType":"module"}