{"ast":null,"code":"export const setTasks = tasks => {\n  return {\n    type: \"SET_TASKS\",\n    tasks\n  };\n};\nexport const postTask = task => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    }).then(resp => resp.json()).then(response => {\n      if (response.content) {\n        console.log(); // alert(response.content)\n      } else {\n        dispatch(addTask(response.data));\n      }\n    }).catch(alert);\n  };\n};\nexport const addTask = task => {\n  return {\n    type: \"ADD_TASK\",\n    task\n  };\n};\nexport const updateTask = (task, id, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/tasks/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    }).then(resp => resp.json()).then(response => {\n      if (response.content) {\n        alert(response.content);\n      } else {\n        history.push('/');\n        response.data.attributes.completed === true ? dispatch(completedTask(response.data)) : dispatch(updateTaskStore(response.data));\n      }\n\n      return response.data;\n    }).catch(alert);\n  };\n};\nexport const updateTaskStore = task => {\n  return {\n    type: \"UPDATE_TASK\",\n    task\n  };\n};\nexport const completedTask = task => {\n  return {\n    type: \"COMPLETED_TASK\",\n    task\n  };\n};\nexport const deleteTask = (taskId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/tasks/${taskId}`, {\n      method: \"DELETE\"\n    }).then(resp => resp.json()).then(response => {\n      if (response.message) {\n        history.push('/');\n        alert(response.message);\n        dispatch(deleteTaskStore(taskId));\n      } else {\n        throw new Error(response.errors);\n      }\n    }).catch(alert);\n  };\n};\nexport const deleteTaskStore = taskId => {\n  return {\n    type: \"DELETE_TASK\",\n    taskId\n  };\n};","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/actions/tasks.js"],"names":["setTasks","tasks","type","postTask","task","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","response","content","console","log","addTask","data","catch","alert","updateTask","id","history","push","attributes","completed","completedTask","updateTaskStore","deleteTask","taskId","message","deleteTaskStore","Error","errors"],"mappings":"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","sourcesContent":["\nexport const setTasks = tasks => {\n  return {\n    type: \"SET_TASKS\",\n    tasks\n  }\n}\n\nexport const postTask = task => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.content) {\n          console.log()\n   \n          // alert(response.content)\n        } else {\n          dispatch(addTask(response.data))\n        }\n      })\n    .catch(alert) \n  }\n}\n\nexport const addTask = task => {\n  return {\n    type: \"ADD_TASK\",\n    task\n  }\n}\n\nexport const updateTask = (task, id, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/tasks/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.content) {\n          alert(response.content)\n        } else {\n          history.push('/')\n          response.data.attributes.completed === true ?\n            dispatch(completedTask(response.data)) :\n            dispatch(updateTaskStore(response.data))\n        }\n        return response.data\n      })\n    .catch(alert) \n  }\n}\n\nexport const updateTaskStore = task => {\n  return {\n    type: \"UPDATE_TASK\",\n    task\n  }\n}\n\nexport const completedTask = task => {\n  return {\n    type: \"COMPLETED_TASK\",\n    task\n  }\n}\n\nexport const deleteTask = (taskId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/tasks/${taskId}`, {\n      method: \"DELETE\",\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.message) {\n          history.push('/')\n          alert(response.message)\n          dispatch(deleteTaskStore(taskId))\n        } else {\n          throw new Error(response.errors)\n        }\n      })\n    .catch(alert) \n  }\n}\n\nexport const deleteTaskStore = taskId => {\n  return {\n    type: \"DELETE_TASK\",\n    taskId\n  }\n}"]},"metadata":{},"sourceType":"module"}