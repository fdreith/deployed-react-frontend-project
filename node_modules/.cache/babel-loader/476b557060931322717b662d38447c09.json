{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/EditTask.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTask, deleteTask } from '../actions/tasks';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst initialState = {\n  content: \"\",\n  due_date: new Date(),\n  user_id: 0,\n  owner_id: 0\n};\n\nclass EditTask extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.props.task ? {\n      content: this.props.task.attributes.content,\n      due_date: new Date(this.props.task.attributes.due_date),\n      user_id: this.props.task.attributes.user.id,\n      owner_id: this.props.currentUser.id\n    } : initialState;\n\n    this.handleChange = event => {\n      if (event.target.name === \"user_id\") {\n        this.setState({\n          user_id: parseInt(event.target.value)\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleDateChange = event => {\n      this.setState({\n        due_date: event\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const task = this.state;\n      task.owner_id = parseInt(task.owner_id);\n      this.props.updateTask(task, this.props.task.attributes.id, this.props.history);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Edit Task:   \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.content,\n      name: \"content\",\n      type: \"textarea\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Select Due Date:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.due_date,\n      onChange: this.handleDateChange,\n      name: \"due_date\",\n      dateFormat: \"MM/dd/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Who is this task assigned to:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"user_id\",\n      id: \"user-select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.props.task.attributes.user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Choose a user\"), this.props.users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n      key: user.id,\n      value: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }\n    }, user.name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Update Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), this.props.task && /*#__PURE__*/React.createElement(\"input\", {\n      onClick: () => this.props.deleteTask(this.props.task.attributes.id, this.props.history),\n      type: \"button\",\n      value: \"Delete Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateTask,\n  deleteTask\n})(EditTask);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/EditTask.js"],"names":["React","Component","connect","updateTask","deleteTask","DatePicker","initialState","content","due_date","Date","user_id","owner_id","EditTask","state","props","task","attributes","user","id","currentUser","handleChange","event","target","name","setState","parseInt","value","handleDateChange","handleSubmit","preventDefault","history","render","users","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updateTask, deleteTask } from '../actions/tasks'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst initialState = {\n  content: \"\",\n  due_date: new Date(),\n  user_id: 0,\n  owner_id: 0\n}\n\nclass EditTask extends Component {\n\n  state = this.props.task ?\n    {\n      content: this.props.task.attributes.content,\n      due_date: new Date(this.props.task.attributes.due_date),\n      user_id: this.props.task.attributes.user.id,\n      owner_id: (this.props.currentUser.id)\n    } :\n    initialState\n\n  handleChange = event => {\n    if (event.target.name === \"user_id\") {\n      this.setState({\n        user_id: parseInt(event.target.value)\n      })\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  handleDateChange = event => {\n    this.setState({\n      due_date: event\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const task = this.state\n    task.owner_id = parseInt(task.owner_id)\n    this.props.updateTask(task, this.props.task.attributes.id, this.props.history)\n  }\n\n  render() {\n    return (\n      <div className=\"task-edit\">\n        <form onSubmit={this.handleSubmit}>\n          <label>Edit Task:   </label>\n          <br></br>\n          <input value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n          <br></br>\n          <div className=\"form-group\">\n            <label>Select Due Date:</label>\n            <br></br>\n            <DatePicker\n              selected={this.state.due_date}\n              onChange={this.handleDateChange}\n              name=\"due_date\"\n              dateFormat=\"MM/dd/yyyy\"\n            />\n          </div>\n          <label htmlFor=\"user-select\">Who is this task assigned to:</label>\n          <br></br>\n          <select name=\"user_id\" id=\"user-select\" onChange={this.handleChange}>\n            <option value={this.props.task.attributes.user.id}>Choose a user</option>\n            {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n          </select>\n          <br></br>\n          <br></br>\n          <input type=\"submit\" value=\"Update Task\" />\n        </form>\n        {this.props.task && <input onClick={() => this.props.deleteTask(this.props.task.attributes.id, this.props.history)} type=\"button\" value=\"Delete Task\" />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users\n  })\n}\n\nexport default connect(mapStateToProps, { updateTask, deleteTask })(EditTask)\n"]},"metadata":{},"sourceType":"module"}