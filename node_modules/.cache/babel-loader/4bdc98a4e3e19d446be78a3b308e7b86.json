{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from './actions/currentUser';\nimport TasksContainer from './components/TasksContainer.js';\nimport NavBar from './components/NavBar.js';\nimport { fetchDepartments } from './actions/departments';\nimport { fetchComments } from './actions/comments';\nimport LoginForm from './components/LoginForm.js';\nimport SignUpForm from './components/SignUpForm.js';\nimport { withRouter } from 'react-router-dom';\nimport MyTasks from './MyTasks.js';\nimport TaskForm from './TaskForm.js';\nimport AssignedTasks from './AssignedTasks.js';\nimport CompletedTasks from './CompletedTasks.js';\nimport EditTask from '../EditTask.js';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n    this.props.fetchDepartments();\n    this.props.fetchComments();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => /*#__PURE__*/React.createElement(MyTasks, Object.assign({}, routerProps, {\n        myTasks: this.props.myTasks,\n        currentUser: this.props.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/assigned\",\n      render: routerProps => /*#__PURE__*/React.createElement(AssignedTasks, Object.assign({}, routerProps, {\n        assignedTasks: this.props.assignedTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/completed\",\n      render: routerProps => /*#__PURE__*/React.createElement(CompletedTasks, Object.assign({}, routerProps, {\n        completedTasks: this.props.completedTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/:id/edit\",\n      render: routerProps => {\n        const tasks = [this.props.myTasks, this.props.assignedTasks].flat();\n        const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id));\n        return /*#__PURE__*/React.createElement(EditTask, Object.assign({}, routerProps, {\n          task: task,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 22\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), \"}\"), /*#__PURE__*/React.createElement(NavBar, {\n      loggedIn: this.props.loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), this.props.loggedIn ? /*#__PURE__*/React.createElement(TaskForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(SignUpForm, {\n      departments: this.props.departments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: !!state.currentUser,\n    departments: state.departments\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getCurrentUser,\n  fetchDepartments,\n  fetchComments\n})(App));","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/App.js"],"names":["React","Component","connect","getCurrentUser","TasksContainer","NavBar","fetchDepartments","fetchComments","LoginForm","SignUpForm","withRouter","MyTasks","TaskForm","AssignedTasks","CompletedTasks","EditTask","Switch","Route","App","componentDidMount","props","render","routerProps","myTasks","currentUser","assignedTasks","completedTasks","tasks","flat","task","find","attributes","id","parseInt","match","params","loggedIn","departments","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from './actions/currentUser'\nimport TasksContainer from './components/TasksContainer.js'\nimport NavBar from './components/NavBar.js'\nimport { fetchDepartments } from './actions/departments'\nimport { fetchComments } from './actions/comments'\nimport LoginForm from './components/LoginForm.js'\nimport SignUpForm from './components/SignUpForm.js'\nimport { withRouter } from 'react-router-dom';\n\nimport MyTasks from './MyTasks.js'\nimport TaskForm from './TaskForm.js'\nimport AssignedTasks from './AssignedTasks.js'\nimport CompletedTasks from './CompletedTasks.js'\nimport EditTask from '../EditTask.js'\nimport { Switch, Route } from 'react-router-dom'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getCurrentUser()\n    this.props.fetchDepartments()\n    this.props.fetchComments()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact path=\"/\"\n            render={(routerProps) => <MyTasks {...routerProps} myTasks={this.props.myTasks} currentUser={this.props.currentUser} />}\n          />\n          <Route\n            path=\"/tasks/assigned\"\n            render={(routerProps) => <AssignedTasks {...routerProps} assignedTasks={this.props.assignedTasks} />}\n          />\n          <Route\n            path=\"/tasks/completed\"\n            render={(routerProps) => <CompletedTasks {...routerProps} completedTasks={this.props.completedTasks} />}\n          />\n          <Route\n            path=\"/tasks/:id/edit\"\n            render={(routerProps) => {\n              const tasks = [this.props.myTasks, this.props.assignedTasks].flat()\n              const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id))\n              return <EditTask {...routerProps} task={task}\n              />\n            }}\n          />}\n        </Switch>\n        <NavBar loggedIn={this.props.loggedIn} />\n        {this.props.loggedIn ?\n          <TaskForm />\n          :\n          <><LoginForm /><br></br><br></br>\n            <SignUpForm departments={this.props.departments} />\n          </>}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    loggedIn: !!state.currentUser,\n    departments: state.departments\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, { getCurrentUser, fetchDepartments, fetchComments })(App))\n\n\n"]},"metadata":{},"sourceType":"module"}