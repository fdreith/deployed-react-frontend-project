{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js';\nimport TaskForm from './TaskForm.js';\nimport AssignedTasks from './AssignedTasks.js';\nimport CompletedTasks from './CompletedTasks.js';\nimport EditTask from './EditTask.js';\nimport { Switch, Route } from 'react-router-dom';\n\nclass TasksContainer extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => /*#__PURE__*/React.createElement(MyTasks, Object.assign({}, routerProps, {\n        myTasks: this.props.myTasks,\n        currentUser: this.props.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/assigned\",\n      render: routerProps => /*#__PURE__*/React.createElement(AssignedTasks, Object.assign({}, routerProps, {\n        assignedTasks: this.props.assignedTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/completed\",\n      render: routerProps => /*#__PURE__*/React.createElement(CompletedTasks, Object.assign({}, routerProps, {\n        completedTasks: this.props.completedTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/:id/edit\",\n      render: routerProps => {\n        const tasks = [this.props.myTasks, this.props.assignedTasks].flat();\n        const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id));\n        return /*#__PURE__*/React.createElement(EditTask, Object.assign({}, routerProps, {\n          task: task,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 22\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TaskForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst sortByDate = tasks => {\n  return tasks.sort(function (a, b) {\n    const dueDateA = a.attributes.due_date;\n    const dueDateB = b.attributes.due_date;\n\n    if (dueDateA < dueDateB) {\n      return -1;\n    }\n\n    if (dueDateA > dueDateB) {\n      return 1;\n    }\n\n    return 0;\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users,\n    myTasks: sortByDate(state.tasks.myTasks),\n    assignedTasks: sortByDate(state.tasks.assignedTasks),\n    completedTasks: sortByDate(state.tasks.completedTasks)\n  };\n};\n\nexport default connect(mapStateToProps)(TasksContainer);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js"],"names":["React","Component","connect","MyTasks","TaskForm","AssignedTasks","CompletedTasks","EditTask","Switch","Route","TasksContainer","render","routerProps","props","myTasks","currentUser","assignedTasks","completedTasks","tasks","flat","task","find","attributes","id","parseInt","match","params","sortByDate","sort","a","b","dueDateA","due_date","dueDateB","mapStateToProps","state","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js'\nimport TaskForm from './TaskForm.js'\nimport AssignedTasks from './AssignedTasks.js'\nimport CompletedTasks from './CompletedTasks.js'\nimport EditTask from './EditTask.js'\nimport { Switch, Route } from 'react-router-dom'\n\nclass TasksContainer extends Component {\n\n  render() {\n    return (\n      <div className=\"tasks-container\">\n        <Switch>\n          <Route\n            exact path=\"/\"\n            render={(routerProps) => <MyTasks {...routerProps} myTasks={this.props.myTasks} currentUser={this.props.currentUser} />}\n          />\n          <Route\n            path=\"/tasks/assigned\"\n            render={(routerProps) => <AssignedTasks {...routerProps} assignedTasks={this.props.assignedTasks} />}\n          />\n          <Route\n            path=\"/tasks/completed\"\n            render={(routerProps) => <CompletedTasks {...routerProps} completedTasks={this.props.completedTasks} />}\n          />\n          <Route\n            path=\"/tasks/:id/edit\"\n            render={(routerProps) => {\n              const tasks = [this.props.myTasks, this.props.assignedTasks].flat()\n              const task = tasks.find(task => task.attributes.id === parseInt(routerProps.match.params.id))\n              return <EditTask {...routerProps} task={task} />\n            }}\n          />\n          <Route\n            path=\"/logout\"\n          />\n        \n        </Switch>\n        <hr />\n        <TaskForm />\n\n      </div >\n    )\n  }\n}\n\nconst sortByDate = (tasks) => {\n  return tasks.sort(function (a, b) {\n    const dueDateA = a.attributes.due_date\n    const dueDateB = b.attributes.due_date\n    if (dueDateA < dueDateB) {\n      return -1\n    }\n    if (dueDateA > dueDateB) {\n      return 1\n    }\n    return 0\n  })\n}\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users,\n    myTasks: sortByDate(state.tasks.myTasks),\n    assignedTasks: sortByDate(state.tasks.assignedTasks),\n    completedTasks: sortByDate(state.tasks.completedTasks)\n  })\n}\n\nexport default connect(mapStateToProps)(TasksContainer)"]},"metadata":{},"sourceType":"module"}