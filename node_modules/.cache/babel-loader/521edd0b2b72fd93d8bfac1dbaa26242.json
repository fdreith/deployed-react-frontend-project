{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Task.js\";\nimport React, { Component } from 'react';\nimport TaskInfo from './TaskInfo';\nimport { Link } from 'react-router-dom';\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      this.setState({\n        showComponent: !this.state.showComponent\n      });\n    };\n\n    this.state = {\n      showComponent: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, this.props.task.attributes.content, \" - by \", displayDate(this.props.task.attributes.due_date)), this.state.showComponent && /*#__PURE__*/React.createElement(TaskInfo, {\n      task: this.props.task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst displayDate = dateString => {\n  const date = new Date(dateString);\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  const weekday = days[date.getDay()];\n  const month = months[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${weekday}, ${month} ${day} ${year}`;\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Task.js"],"names":["React","Component","TaskInfo","Link","Task","constructor","props","handleClick","event","setState","showComponent","state","render","task","attributes","content","displayDate","due_date","dateString","date","Date","days","months","weekday","getDay","month","getMonth","day","getDate","year","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOLC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADf,OAAd;AAIH,KAZkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AASDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAE,KAAKL,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWO,IAAX,CAAgBC,UAAhB,CAA2BC,OAD9B,YAC6CC,WAAW,CAAC,KAAKV,KAAL,CAAWO,IAAX,CAAgBC,UAAhB,CAA2BG,QAA5B,CADxD,CADF,EAMG,KAAKN,KAAL,CAAWD,aAAX,iBACC,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWO,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF;AAYD;;AA5B0B;;AA+B7B,MAAMG,WAAW,GAAIE,UAAD,IAAgB;AAClC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,UAAT,CAAb;AACA,QAAMG,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,CAAb;AACA,QAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,CAAf;AACA,QAAMC,OAAO,GAAGF,IAAI,CAACF,IAAI,CAACK,MAAL,EAAD,CAApB;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACH,IAAI,CAACO,QAAL,EAAD,CAApB;AACA,QAAMC,GAAG,GAAGR,IAAI,CAACS,OAAL,EAAZ;AACA,QAAMC,IAAI,GAAGV,IAAI,CAACW,WAAL,EAAb;AACA,SAAQ,GAAEP,OAAQ,KAAIE,KAAM,IAAGE,GAAI,IAAGE,IAAK,EAA3C;AAED,CAVD;;AAYA,eAAezB,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport TaskInfo from './TaskInfo'\nimport { Link } from 'react-router-dom'\n\nclass Task extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showComponent: false\n    }\n  }\n\n  handleClick = event => {\n      this.setState({\n        showComponent: !this.state.showComponent\n      })\n      \n  }\n\n  render() {\n    return (\n      <div>\n        <li onClick={this.handleClick}>\n          {this.props.task.attributes.content} - by {displayDate(this.props.task.attributes.due_date)}\n          {/* {this.props.task.attributes.content || \"You have no tasks\"} */}\n\n        </li>\n        {this.state.showComponent &&\n          <TaskInfo task={this.props.task} /> \n        }\n      </div>\n    )\n  }\n}\n\nconst displayDate = (dateString) => {\n  const date = new Date(dateString)\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n  const weekday = days[date.getDay()]\n  const month = months[date.getMonth()]\n  const day = date.getDate()\n  const year = date.getFullYear()\n  return `${weekday}, ${month} ${day} ${year}`\n\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}