{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/EditTask.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTask, deleteTask } from '../actions/tasks';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nconst initialState = {\n  content: \"\",\n  due_date: new Date(),\n  user_id: 0,\n  owner_id: 0\n};\n\nclass EditTask extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.props.task ? {\n      content: this.props.task.attributes.content,\n      due_date: new Date(this.props.task.attributes.due_date),\n      user_id: this.props.task.attributes.user.id,\n      owner_id: parseInt(this.props.currentUser.id)\n    } : initialState;\n\n    this.handleChange = event => {\n      if (event.target.name === \"user_id\") {\n        this.setState({\n          user_id: parseInt(event.target.value)\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleDateChange = event => {\n      this.setState({\n        due_date: event\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.updateTask(this.state, this.props.task.attributes.id, this.props.history);\n      this.setState({\n        initialState\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Edit Task:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.content,\n      name: \"content\",\n      type: \"textarea\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Select Due Date:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.due_date,\n      onChange: this.handleDateChange,\n      name: \"due_date\",\n      dateFormat: \"MM/dd/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Who is this task assigned to:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"user_id\",\n      id: \"user-select\",\n      onChange: this.handleChange,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.props.currentUser.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, \"Choose a user\"), this.props.users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n      key: user.id,\n      value: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }, user.name)))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Submit\")), this.props.task && /*#__PURE__*/React.createElement(Button, {\n      variant: \"\",\n      onClick: () => this.props.deleteTask(this.props.task.attributes.id, this.props.history),\n      type: \"button\",\n      value: \"Delete Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \" Delete Task \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateTask,\n  deleteTask\n})(EditTask);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/EditTask.js"],"names":["React","Component","connect","updateTask","deleteTask","DatePicker","Button","Form","initialState","content","due_date","Date","user_id","owner_id","EditTask","state","props","task","attributes","user","id","parseInt","currentUser","handleChange","event","target","name","setState","value","handleDateChange","handleSubmit","preventDefault","history","render","users","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updateTask, deleteTask } from '../actions/tasks'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst initialState = {\n  content: \"\",\n  due_date: new Date(),\n  user_id: 0,\n  owner_id: 0\n}\n\nclass EditTask extends Component {\n\n  state = this.props.task ?\n    {\n      content: this.props.task.attributes.content,\n      due_date: new Date(this.props.task.attributes.due_date),\n      user_id: this.props.task.attributes.user.id,\n      owner_id: parseInt(this.props.currentUser.id)\n    } :\n    initialState\n\n  handleChange = event => {\n    if (event.target.name === \"user_id\") {\n      this.setState({\n        user_id: parseInt(event.target.value)\n      })\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  handleDateChange = event => {\n    this.setState({\n      due_date: event\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.updateTask(this.state, this.props.task.attributes.id, this.props.history)\n    this.setState({\n      initialState\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"task-edit\">\n        {/* //   <form onSubmit={this.handleSubmit}>\n      //     <label>Edit Task:   </label>\n      //     <br></br>\n      //     <input value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n      //     <br></br>\n      //     <div className=\"form-group\">\n      //       <label>Select Due Date:</label>\n      //       <br></br>\n      //       <DatePicker */}\n        {/* //         selected={this.state.due_date}\n      //         onChange={this.handleDateChange}\n      //         name=\"due_date\"\n      //         dateFormat=\"MM/dd/yyyy\"\n      //       />\n      //     </div> */}\n        {/* //     <label htmlFor=\"user-select\">Who is this task assigned to:</label>\n      //     <br></br>\n      //     <select name=\"user_id\" id=\"user-select\" onChange={this.handleChange}>\n      //       <option value={this.props.task.attributes.user.id}>Choose a user</option>\n      //       {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n      //     </select>\n      //     <br></br>\n      //     <br></br>\n      //     <input type=\"submit\" value=\"Update Task\" />\n      //   </form> */}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group >\n            <Form.Label>Edit Task:</Form.Label>\n            <Form.Control value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Select Due Date:</Form.Label>\n            <br></br>\n            <DatePicker\n              selected={this.state.due_date}\n              onChange={this.handleDateChange}\n              name=\"due_date\"\n              dateFormat=\"MM/dd/yyyy\"\n            />\n          </Form.Group>\n          <Form.Group >\n            <Form.Label>Who is this task assigned to:</Form.Label>\n            <Form.Control as=\"select\" name=\"user_id\" id=\"user-select\" onChange={this.handleChange} custom>\n              <option value={this.props.currentUser.id}>Choose a user</option>\n              {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Button size=\"sm\" variant=\"outline-secondary\" type=\"submit\">Submit</Button>\n        </Form>\n        {this.props.task && <Button variant=\"\"onClick={() => this.props.deleteTask(this.props.task.attributes.id, this.props.history)} type=\"button\" value=\"Delete Task\"> Delete Task </Button>}\n      </div>\n\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users\n  })\n}\n\nexport default connect(mapStateToProps, { updateTask, deleteTask })(EditTask)\n"]},"metadata":{},"sourceType":"module"}