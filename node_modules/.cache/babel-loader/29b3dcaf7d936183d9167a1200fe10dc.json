{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js';\nimport TaskForm from './TaskForm.js';\nimport AssignedTasks from './AssignedTasks.js';\nimport CompletedTasks from './CompletedTasks.js';\nimport EditTask from './EditTask.js';\nimport { Switch, Route } from 'react-router-dom';\n\nclass TasksContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filterMyTasks = tasks => {\n      return tasks.filter(task => {\n        debugger;\n        return task.attributes.user.id === this.props.currentUser.id;\n      }).filter(task => task.attributes.completed === false);\n    };\n\n    this.filterAssignedTasks = tasks => {\n      return tasks.filter(task => task.attributes.user.id !== this.props.currentUser.id).filter(task => task.attributes.completed === false);\n    };\n\n    this.filterCompletedTasks = tasks => {\n      return tasks.filter(task => task.attributes.completed === true).filter(task => task.attributes.user.id === this.props.currentUser.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.history.push('/tasks/my-tasks');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/tasks/my-tasks\",\n      render: routerProps => /*#__PURE__*/React.createElement(MyTasks, Object.assign({}, routerProps, {\n        myTasks: this.filterMyTasks(this.props.tasks),\n        currentUser: this.props.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/assigned\",\n      render: routerProps => /*#__PURE__*/React.createElement(AssignedTasks, Object.assign({}, routerProps, {\n        assignedTasks: this.filterAssignedTasks(this.props.tasks),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/completed\",\n      render: routerProps => /*#__PURE__*/React.createElement(CompletedTasks, Object.assign({}, routerProps, {\n        completedTasks: this.filterCompletedTasks(this.props.tasks),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/tasks/:id/edit\",\n      render: routerProps => {\n        const task = this.props.tasks.find(task => {\n          return task.attributes.id === parseInt(routerProps.match.params.id);\n        });\n        return /*#__PURE__*/React.createElement(EditTask, Object.assign({}, routerProps, {\n          task: task,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 22\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TaskForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(TasksContainer);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TasksContainer.js"],"names":["React","Component","connect","MyTasks","TaskForm","AssignedTasks","CompletedTasks","EditTask","Switch","Route","TasksContainer","filterMyTasks","tasks","filter","task","attributes","user","id","props","currentUser","completed","filterAssignedTasks","filterCompletedTasks","componentDidMount","history","push","render","routerProps","find","parseInt","match","params","mapStateToProps","state","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport MyTasks from './MyTasks.js'\nimport TaskForm from './TaskForm.js'\nimport AssignedTasks from './AssignedTasks.js'\nimport CompletedTasks from './CompletedTasks.js'\nimport EditTask from './EditTask.js'\nimport { Switch, Route } from 'react-router-dom'\n\nclass TasksContainer extends Component {\n\n  componentDidMount() {\n    this.props.history.push('/tasks/my-tasks')\n  }\n\n  filterMyTasks = (tasks) => {\n    return tasks.filter(task => {\n      debugger\n      return task.attributes.user.id === this.props.currentUser.id\n    })\n      .filter(task => task.attributes.completed === false)\n  }\n\n  filterAssignedTasks = (tasks) => {\n    return tasks.filter(task => task.attributes.user.id !== this.props.currentUser.id)\n      .filter(task => task.attributes.completed === false)\n  }\n\n  filterCompletedTasks = (tasks) => {\n    return tasks.filter(task => task.attributes.completed === true)\n      .filter(task => task.attributes.user.id === this.props.currentUser.id)\n  }\n\n  render() {\n    return (\n      <div className=\"tasks-container\">\n        <Switch>\n          <Route\n            exact path=\"/tasks/my-tasks\"\n            render={(routerProps) => <MyTasks {...routerProps} myTasks={this.filterMyTasks(this.props.tasks)} currentUser={this.props.currentUser} />}\n          />\n          <Route\n            path=\"/tasks/assigned\"\n            render={(routerProps) => <AssignedTasks {...routerProps} assignedTasks={this.filterAssignedTasks(this.props.tasks)} />}\n          />\n          <Route\n            path=\"/tasks/completed\"\n            render={(routerProps) => <CompletedTasks {...routerProps} completedTasks={this.filterCompletedTasks(this.props.tasks)} />}\n          />\n          <Route\n            path=\"/tasks/:id/edit\"\n            render={(routerProps) => {\n              const task = this.props.tasks.find(task => {\n                return task.attributes.id === parseInt(routerProps.match.params.id)\n              })\n              return <EditTask {...routerProps} task={task} />\n            }}\n          />\n\n        </Switch>\n        <hr />\n        <TaskForm />\n\n      </div >\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users,\n    tasks: state.tasks\n  })\n}\n\nexport default connect(mapStateToProps)(TasksContainer)"]},"metadata":{},"sourceType":"module"}