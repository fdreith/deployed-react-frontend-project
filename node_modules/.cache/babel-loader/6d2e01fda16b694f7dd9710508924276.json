{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TaskForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postTask } from '../actions/tasks';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nclass TaskForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      due_date: new Date(),\n      user_id: this.props.currentUser.id,\n      owner_id: this.props.currentUser.id\n    };\n\n    this.handleChange = event => {\n      if (event.target.name === \"user_id\") {\n        this.setState({\n          user_id: parseInt(event.target.value)\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleDateChange = event => {\n      this.setState({\n        due_date: event\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postTask(this.state);\n      this.setState({\n        content: \"\",\n        due_date: new Date(),\n        user_id: this.props.currentUser.id,\n        owner_id: this.props.currentUser.id\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <form onSubmit={this.handleSubmit}>\n      //   <label><h6>New Task:   </h6></label>\n      //   <br></br>\n      //   <input value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n      //   <br></br>\n      //   <div className=\"form-group\">\n      //     <label>Select Due Date:</label>\n      //     <br></br>\n      //     <DatePicker\n      //       selected={this.state.due_date}\n      //       onChange={this.handleDateChange}\n      //       name=\"due_date\"\n      //       dateFormat=\"MM/dd/yyyy\"\n      //     />\n      //   </div>\n      //   <label htmlFor=\"user-select\">Who is this task assigned to:</label>\n      //   <br></br>\n      //   <select name=\"user_id\" id=\"user-select\" onChange={this.handleChange}>\n      //     <option value={this.props.currentUser.id}>Choose a user</option>\n      //     {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n      //   </select>\n      //   <br></br>\n      //   <br></br>\n      //   <Button variant=\"outline-secondary\" type=\"submit\">Add Task</Button>\n      // </form>\n      React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"New Task:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.content,\n        name: \"content\",\n        type: \"textarea\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Select Due Date:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: this.state.due_date,\n        onChange: this.handleDateChange,\n        name: \"due_date\",\n        dateFormat: \"MM/dd/yyyy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"user-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, \"Who is this task assigned to:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"user_id\",\n        id: \"user-select\",\n        onChange: this.handleChange,\n        custom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: this.props.currentUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Choose a user\"), this.props.users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n        key: user.id,\n        value: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 43\n        }\n      }, user.name)))), /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        variant: \"outline-secondary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, \"Submit\"))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postTask\n})(TaskForm);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TaskForm.js"],"names":["React","Component","connect","postTask","DatePicker","Button","Form","TaskForm","state","content","due_date","Date","user_id","props","currentUser","id","owner_id","handleChange","event","target","name","setState","parseInt","value","handleDateChange","handleSubmit","preventDefault","render","users","map","user","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { postTask } from '../actions/tasks'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\n\n\nclass TaskForm extends Component {\n\n  state = {\n    content: \"\",\n    due_date: new Date(),\n    user_id: this.props.currentUser.id,\n    owner_id: this.props.currentUser.id\n  }\n\n  handleChange = event => {\n    if (event.target.name === \"user_id\") {\n      this.setState({\n        user_id: parseInt(event.target.value)\n      })\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  handleDateChange = event => {\n    this.setState({\n      due_date: event\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.postTask(this.state)\n    this.setState({\n      content: \"\",\n      due_date: new Date(),\n      user_id: this.props.currentUser.id,\n      owner_id: this.props.currentUser.id\n    })\n  }\n\n  render() {\n    return (\n      // <form onSubmit={this.handleSubmit}>\n      //   <label><h6>New Task:   </h6></label>\n      //   <br></br>\n      //   <input value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n      //   <br></br>\n      //   <div className=\"form-group\">\n      //     <label>Select Due Date:</label>\n      //     <br></br>\n      //     <DatePicker\n      //       selected={this.state.due_date}\n      //       onChange={this.handleDateChange}\n      //       name=\"due_date\"\n      //       dateFormat=\"MM/dd/yyyy\"\n      //     />\n      //   </div>\n      //   <label htmlFor=\"user-select\">Who is this task assigned to:</label>\n      //   <br></br>\n      //   <select name=\"user_id\" id=\"user-select\" onChange={this.handleChange}>\n      //     <option value={this.props.currentUser.id}>Choose a user</option>\n      //     {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n      //   </select>\n      //   <br></br>\n      //   <br></br>\n      //   <Button variant=\"outline-secondary\" type=\"submit\">Add Task</Button>\n      // </form>\n\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId=\"content\">\n          <Form.Label>New Task:</Form.Label>\n          <Form.Control value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select Due Date:</Form.Label>\n          <br></br>\n          <DatePicker\n            selected={this.state.due_date}\n            onChange={this.handleDateChange}\n            name=\"due_date\"\n            dateFormat=\"MM/dd/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"user-select\">\n          <Form.Label>Who is this task assigned to:</Form.Label>\n          <Form.Control as=\"select\" name=\"user_id\" id=\"user-select\" onChange={this.handleChange} custom>\n            <option value={this.props.currentUser.id}>Choose a user</option>\n            {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n          </Form.Control>\n        </Form.Group>\n        <Button size=\"sm\" variant=\"outline-secondary\" type=\"submit\">Submit</Button>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users\n  })\n}\n\nexport default connect(mapStateToProps, { postTask })(TaskForm)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}