{"ast":null,"code":"import { setTasks } from \"./tasks.js\";\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  };\n};\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  };\n};\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentUser(response.data));\n      }\n    }).catch(alert);\n  };\n};\nexport const signUp = (credentials, history) => {\n  return dispatch => {\n    const userInfo = {\n      user: credentials\n    };\n    return fetch(\"http://localhost:3001/api/v1/signup\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentUser(response.data));\n        history.push('/');\n      }\n    }).catch(alert);\n  };\n};\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser()); // dispatch(clearTasks())\n\n    return fetch('http://localhost:3001/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      return resp.json();\n    }).then(response => {\n      if (response.error) {\n        // alert(response.error)\n        console.log(response.error);\n      } else {\n        dispatch(setCurrentUser(response.data));\n        dispatch(setTasks(response.included));\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/actions/currentUser.js"],"names":["setTasks","setCurrentUser","user","type","clearCurrentUser","login","credentials","history","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","response","error","alert","data","catch","signUp","userInfo","r","push","logout","event","getCurrentUser","console","log","included"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,KAAK,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAC7C,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,oCAAD,EAAuC;AACjDH,MAAAA,WAAW,EAAE,SADoC;AAEjDI,MAAAA,MAAM,EAAE,MAFyC;AAGjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAHwC;AAOjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AAP2C,KAAvC,CAAL,CASJS,IATI,CASCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATT,EAUJF,IAVI,CAUCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLX,QAAAA,QAAQ,CAACP,cAAc,CAACiB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACD;AACF,KAhBI,EAiBNC,KAjBM,CAiBAF,KAjBA,CAAP;AAkBD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMG,MAAM,GAAG,CAACjB,WAAD,EAAcC,OAAd,KAA0B;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMgB,QAAQ,GAAG;AACftB,MAAAA,IAAI,EAAEI;AADS,KAAjB;AAGA,WAAOG,KAAK,CAAC,qCAAD,EAAwC;AAClDH,MAAAA,WAAW,EAAE,SADqC;AAElDI,MAAAA,MAAM,EAAE,MAF0C;AAGlDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAHyC;AAOlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeU,QAAf;AAP4C,KAAxC,CAAL,CASJT,IATI,CASCU,CAAC,IAAIA,CAAC,CAACR,IAAF,EATN,EAUJF,IAVI,CAUCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLX,QAAAA,QAAQ,CAACP,cAAc,CAACiB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAd,QAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACD;AACF,KAjBI,EAkBJJ,KAlBI,CAkBEF,KAlBF,CAAP;AAmBD,GAvBD;AAwBD,CAzBM;AA4BP,OAAO,MAAMO,MAAM,GAAGC,KAAK,IAAI;AAC7B,SAAOpB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CADiB,CAEjB;;AACA,WAAOK,KAAK,CAAC,qCAAD,EAAwC;AAClDH,MAAAA,WAAW,EAAE,SADqC;AAElDI,MAAAA,MAAM,EAAE;AAF0C,KAAxC,CAAZ;AAID,GAPD;AAQD,CATM;AAWP,OAAO,MAAMmB,cAAc,GAAG,MAAM;AAClC,SAAOrB,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,+CAAD,EAAkD;AAC5DH,MAAAA,WAAW,EAAE,SAD+C;AAE5DI,MAAAA,MAAM,EAAE,KAFoD;AAG5DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHmD,KAAlD,CAAL,CAOJI,IAPI,CAOCC,IAAI,IAAI;AACZ,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KATI,EAUJF,IAVI,CAUCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAACC,KAArB;AACD,OAHD,MAGO;AACLX,QAAAA,QAAQ,CAACP,cAAc,CAACiB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAb,QAAAA,QAAQ,CAACR,QAAQ,CAACkB,QAAQ,CAACc,QAAV,CAAT,CAAR;AACD;AACF,KAlBI,EAmBJV,KAnBI,CAmBEQ,OAAO,CAACC,GAnBV,CAAP;AAoBD,GArBD;AAsBD,CAvBM","sourcesContent":["import { setTasks } from \"./tasks.js\"\n\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  }\n}\n\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  }\n}\n\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(resp => resp.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response.data))\n        }\n      })\n    .catch(alert) \n  }\n}\n\nexport const signUp = (credentials, history) => {\n  return dispatch => {\n    const userInfo = {\n      user: credentials\n    }\n    return fetch(\"http://localhost:3001/api/v1/signup\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response.data))\n          history.push('/')\n        }\n      })\n      .catch(alert)\n  }\n}\n\n\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser())\n    // dispatch(clearTasks())\n    return fetch('http://localhost:3001/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    })\n  }\n}\n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(resp => {\n        return resp.json()\n      })\n      .then(response => {\n        if (response.error) {\n          // alert(response.error)\n          console.log(response.error)\n        } else {\n          dispatch(setCurrentUser(response.data))\n          dispatch(setTasks(response.included))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}