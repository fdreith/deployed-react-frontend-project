{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TaskForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postTask } from '../actions/tasks';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nclass TaskForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      due_date: new Date(),\n      user_id: this.props.currentUser.id,\n      owner_id: this.props.currentUser.id\n    };\n\n    this.handleChange = event => {\n      if (event.target.name === \"user_id\") {\n        this.setState({\n          user_id: parseInt(event.target.value)\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleDateChange = event => {\n      this.setState({\n        due_date: event\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postTask(this.state);\n      this.setState({\n        content: \"\",\n        due_date: new Date(),\n        user_id: this.props.currentUser.id,\n        owner_id: this.props.currentUser.id\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"New Task:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.content,\n      name: \"content\",\n      type: \"textarea\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Select Due Date:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.due_date,\n      onChange: this.handleDateChange,\n      name: \"due_date\",\n      dateFormat: \"MM/dd/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Who is this task assigned to:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"user_id\",\n      id: \"user-select\",\n      o: true,\n      nChange: this.handleChange,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.props.currentUser.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Choose a user\"), this.props.users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n      key: user.id,\n      value: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 43\n      }\n    }, user.name)))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"outline-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Add Task\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postTask\n})(TaskForm);","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/TaskForm.js"],"names":["React","Component","connect","postTask","DatePicker","Button","Form","TaskForm","state","content","due_date","Date","user_id","props","currentUser","id","owner_id","handleChange","event","target","name","setState","parseInt","value","handleDateChange","handleSubmit","preventDefault","render","users","map","user","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { postTask } from '../actions/tasks'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\n\n\nclass TaskForm extends Component {\n\n  state = {\n    content: \"\",\n    due_date: new Date(),\n    user_id: this.props.currentUser.id,\n    owner_id: this.props.currentUser.id\n  }\n\n  handleChange = event => {\n    if (event.target.name === \"user_id\") {\n      this.setState({\n        user_id: parseInt(event.target.value)\n      })\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  handleDateChange = event => {\n    this.setState({\n      due_date: event\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.postTask(this.state)\n    this.setState({\n      content: \"\",\n      due_date: new Date(),\n      user_id: this.props.currentUser.id,\n      owner_id: this.props.currentUser.id\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group >\n          <Form.Label>New Task:</Form.Label>\n          <Form.Control value={this.state.content} name=\"content\" type=\"textarea\" onChange={this.handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select Due Date:</Form.Label>\n          <br></br>\n          <DatePicker\n            selected={this.state.due_date}\n            onChange={this.handleDateChange}\n            name=\"due_date\"\n            dateFormat=\"MM/dd/yyyy\"\n          />\n        </Form.Group>\n        <Form.Group >\n          <Form.Label>Who is this task assigned to:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"user_id\"\n            id=\"user-select\"\n            o\n            nChange={this.handleChange}\n            custom>\n            <option value={this.props.currentUser.id}>Choose a user</option>\n            {this.props.users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}\n          </Form.Control>\n        </Form.Group>\n        <Button size=\"sm\" variant=\"outline-secondary\" type=\"submit\">Add Task</Button>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    currentUser: state.currentUser,\n    users: state.users\n  })\n}\n\nexport default connect(mapStateToProps, { postTask })(TaskForm)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}