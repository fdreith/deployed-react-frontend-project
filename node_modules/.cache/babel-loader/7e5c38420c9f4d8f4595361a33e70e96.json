{"ast":null,"code":"var _jsxFileName = \"/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Task.js\";\nimport React, { Component } from 'react';\nimport TaskInfo from './TaskInfo';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport { updatePriority } from '../actions/tasks';\n\nclass Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showComponent: false,\n      counter: 0\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        showComponent: !this.state.showComponent\n      });\n    };\n\n    this.handleButtonClick = () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n      this.updateTaskPriority(this.props.task, this.state.counter);\n    };\n\n    this.updateTaskPriority = (task, counter) => {\n      const updatePriority = {\n        priority: counter + 1\n      };\n      const updatedTask = { ...task,\n        ...updatePriority\n      };\n      this.props.replaceTask(updatedTask);\n    };\n\n    this.renderTask = () => {\n      if (this.props.completed) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, this.props.task.attributes.content), this.state.showComponent && /*#__PURE__*/React.createElement(TaskInfo, {\n          task: this.props.task,\n          history: this.props.history,\n          completed: this.props.completed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xs-4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"outline-secondary\",\n          onClick: () => this.handleButtonClick(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }, this.state.counter)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-xs-4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"li\",\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, this.props.task.attributes.content, \" - by \", displayDate(this.props.task.attributes.due_date))), this.state.showComponent && /*#__PURE__*/React.createElement(TaskInfo, {\n          task: this.props.task,\n          history: this.props.history,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.renderTask());\n  }\n\n}\n\nconst displayDate = dateString => {\n  const date = new Date(dateString);\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  const weekday = days[date.getDay()];\n  const month = months[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${weekday}, ${month} ${day} ${year}`;\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/francescadreith/development/projects/react-redux-project/react-project-frontend/src/components/Task.js"],"names":["React","Component","TaskInfo","Button","connect","updatePriority","Task","state","showComponent","counter","handleClick","event","setState","handleButtonClick","updateTaskPriority","props","task","priority","updatedTask","replaceTask","renderTask","completed","attributes","content","history","displayDate","due_date","render","dateString","date","Date","days","months","weekday","getDay","month","getMonth","day","getDate","year","getFullYear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TaskInfo from './TaskInfo'\nimport Button from 'react-bootstrap/Button'\nimport { connect } from 'react-redux';\nimport { updatePriority } from '../actions/tasks'\n\nclass Task extends Component {\n  state = {\n    showComponent: false,\n    counter: 0\n  }\n\n  handleClick = event => {\n    this.setState({\n      showComponent: !this.state.showComponent,\n    })\n  }\n\n  handleButtonClick = () => {\n    this.setState({\n      counter: this.state.counter + 1\n    })\n    this.updateTaskPriority(this.props.task, this.state.counter)\n  }\n\n  updateTaskPriority = (task, counter) => {\n    const updatePriority = { priority: counter + 1 }\n    const updatedTask = { ...task, ...updatePriority }\n    this.props.replaceTask(updatedTask)\n  }\n\n  renderTask = () => {\n    if (this.props.completed) {\n      return (\n        <div>\n          <li onClick={this.handleClick}>\n            {this.props.task.attributes.content}\n          </li>\n          {this.state.showComponent &&\n            <TaskInfo task={this.props.task} history={this.props.history} completed={this.props.completed} />\n          }\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"row\">\n          <div className=\"col-xs-4\">\n\n            <Button size=\"sm\" variant=\"outline-secondary\" onClick={() => this.handleButtonClick()}>{this.state.counter}</Button>\n          </div>\n          <div className=\"col-xs-4\">\n\n            <p className=\"li\" onClick={this.handleClick}>\n              {this.props.task.attributes.content} - by {displayDate(this.props.task.attributes.due_date)}\n            </p>\n          </div>\n          {this.state.showComponent &&\n            <TaskInfo task={this.props.task} history={this.props.history} />\n          }\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderTask()}\n      </div>\n    )\n\n  }\n}\n\nconst displayDate = (dateString) => {\n  const date = new Date(dateString)\n  const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n  const weekday = days[date.getDay()]\n  const month = months[date.getMonth()]\n  const day = date.getDate()\n  const year = date.getFullYear()\n  return `${weekday}, ${month} ${day} ${year}`\n\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}